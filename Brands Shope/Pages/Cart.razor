@page "/cart"
@using Brands_Shope.Models
@using Brands_Shope.Services
@inject CartService CartService

<div class="container py-4">
    <h2 class="text-center mb-4" style="color: #28a745;">🛒 Your Shopping Cart</h2>

    @if (cartItems == null)
    {
        <p>Loading...</p>
    }
    else if (!cartItems.Any())
    {
        <div class="d-flex justify-content-center align-items-center" style="height: 60vh;">
            <div class="card text-center shadow-lg p-4 border-0 rounded-4" style="width: 320px;">
                <div class="card-body">
                    <span class="bi bi-cart-fill text-danger" style="font-size: 3.5rem;"></span>
                    <h4 class="mt-3 text-danger fw-bold">Your cart is empty</h4>
                    <p class="text-muted">Add items to your cart to see them here.</p>
                    <a href="/brands" class="btn btn-outline-primary mt-2">Go Shopping</a>
                </div>
            </div>
        </div>
    }
    else
    {
        <ul class="list-group mb-3">
            @foreach (var item in cartItems)
            {
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    <div class="d-flex align-items-center">
                        <img src="images/products/@(item.ProductId).png" style="width: 50px; height: 50px; object-fit: contain;" class="me-3" />
                        <div>
                            <div class="fw-bold">@item.Product?.Name</div>
                            <div class="text-muted" style="font-size: 0.9rem;">
                                $@((item.Product?.Price ?? 0).ToString("0.00"))
                            </div>
                        </div>
                    </div>

                    <div class="d-flex align-items-center">
                        <button class="btn btn-sm btn-outline-secondary me-1" @onclick="@(() => UpdateQuantity(item.Id, item.Quantity - 1))" disabled="@(item.Quantity <= 1)">−</button>
                        <span class="mx-2">@item.Quantity</span>
                        <button class="btn btn-sm btn-outline-secondary me-3" @onclick="@(() => UpdateQuantity(item.Id, item.Quantity + 1))">+</button>
                        <button class="btn btn-sm btn-outline-danger" @onclick="() => RemoveItem(item.Id)">Remove</button>
                    </div>
                </li>
            }
        </ul>

        <div class="text-end fw-bold fs-5">
            Total: $@total.ToString("0.00")
        </div>
    }
</div>

@code {
    private List<CartItem>? cartItems;
    private decimal total;

    protected override async Task OnInitializedAsync()
    {
        await LoadCart();
    }

    private async Task LoadCart()
    {
        cartItems = await CartService.GetCartItems();
        total = await CartService.GetTotalPrice();
    }

    private async Task UpdateQuantity(int cartItemId, int newQuantity)
    {
        await CartService.UpdateQuantity(cartItemId, newQuantity);
        await LoadCart();
    }

    private async Task RemoveItem(int cartItemId)
    {
        await CartService.RemoveFromCart(cartItemId);
        await LoadCart();
    }
}
